---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: pipelineschedules.projects.gitlab.crossplane.io
spec:
  group: projects.gitlab.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gitlab
    kind: PipelineSchedule
    listKind: PipelineScheduleList
    plural: pipelineschedules
    singular: pipelineschedule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A PipelineSchedule is a managed resource that represents a Gitlab
          Pipeline Schedule.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PipelineScheduleSpec defines desired state of Gitlab Pipeline
              Schedule.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: |-
                  PipelineScheduleParameters represents a pipeline schedule.

                  GitLab API docs:
                  https://docs.gitlab.com/ee/api/pipeline_schedules.html
                  At least 1 of [ProjectID, ProjectIDRef, ProjectIDSelector] required.
                properties:
                  active:
                    description: |-
                      Active is the activation of pipeline schedule.
                      If false is set, the pipeline schedule is initially deactivated (default: true).
                    type: boolean
                  cron:
                    description: 'Cron is the cron schedule, for example: 0 1 * *
                      *.'
                    type: string
                  cronTimezone:
                    description: |-
                      CronTimezone is the time zone supported by ActiveSupport::TimeZone,
                      for example: Pacific Time (US & Canada) (default: UTC).
                    type: string
                  description:
                    description: Description is a description of the pipeline schedule.
                    type: string
                  projectId:
                    description: The ID or URL-encoded path of the project owned by
                      the authenticated user.
                    type: string
                  projectIdRef:
                    description: ProjectIDRef is a reference to a project to retrieve
                      its ProjectID.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectIdSelector:
                    description: ProjectIDSelector selects reference to a project
                      to retrieve its ProjectID.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  ref:
                    description: Ref is the branch or tag name that is triggered.
                    type: string
                  variables:
                    description: PipelineVariables is a type of environment variable.
                    items:
                      description: |-
                        PipelineVariable represents a pipeline variable.

                        GitLab API docs: https://docs.gitlab.com/ee/api/pipelines.html
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                        variableType:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                required:
                - cron
                - description
                - ref
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PipelineScheduleStatus represents observed state of Gitlab
              Pipeline Schedule.
            properties:
              atProvider:
                description: |-
                  PipelineScheduleObservation represents observed stated of Gitlab Pipeline Schedule.
                  https://docs.gitlab.com/ee/api/pipeline_schedules.htm
                properties:
                  createdAt:
                    format: date-time
                    type: string
                  id:
                    type: integer
                  lastPipeline:
                    description: |-
                      LastPipeline represents the last pipeline ran by schedule
                      this will be returned only for individual schedule get operation
                    properties:
                      id:
                        type: integer
                      ref:
                        type: string
                      sha:
                        type: string
                      status:
                        type: string
                      webUrl:
                        type: string
                    required:
                    - id
                    - ref
                    - sha
                    - status
                    - webUrl
                    type: object
                  nextRunAt:
                    format: date-time
                    type: string
                  owner:
                    description: |-
                      User represents a GitLab user.

                      GitLab API docs: https://docs.gitlab.com/ee/api/users.html
                    properties:
                      ID:
                        type: integer
                      avatarURL:
                        type: string
                      bio:
                        type: string
                      canCreateGroup:
                        type: boolean
                      canCreateProject:
                        type: boolean
                      colorSchemeID:
                        type: integer
                      confirmedAt:
                        format: date-time
                        type: string
                      createdAt:
                        format: date-time
                        type: string
                      currentSignInAt:
                        format: date-time
                        type: string
                      customAttributes:
                        items:
                          description: |-
                            CustomAttribute struct is used to unmarshal response to api calls.

                            GitLab API docs: https://docs.gitlab.com/ce/api/custom_attributes.html
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                      email:
                        type: string
                      externUID:
                        type: string
                      external:
                        type: boolean
                      identities:
                        items:
                          description: UserIdentity represents a user identity.
                          properties:
                            externUID:
                              type: string
                            provider:
                              type: string
                          required:
                          - externUID
                          - provider
                          type: object
                        type: array
                      isAdmin:
                        type: boolean
                      lastActivityOn:
                        format: date-time
                        type: string
                      lastSignInAt:
                        format: date-time
                        type: string
                      linkedin:
                        type: string
                      location:
                        type: string
                      name:
                        type: string
                      organization:
                        type: string
                      privateProfile:
                        type: boolean
                      projectsLimit:
                        type: integer
                      provider:
                        type: string
                      publicEmail:
                        type: string
                      sharedRunnersMinutesLimit:
                        type: integer
                      skype:
                        type: string
                      state:
                        type: string
                      themeID:
                        type: integer
                      twitter:
                        type: string
                      twoFactorEnabled:
                        type: boolean
                      username:
                        type: string
                      webURL:
                        type: string
                      websiteURL:
                        type: string
                    type: object
                  updatedAt:
                    format: date-time
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
